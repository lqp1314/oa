<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.oa.dao.EmployeeDao">

    <resultMap id="employee" type="Employee">
        <id property="sn" column="sn" javaType="String"/>
        <result property="password" column="password" javaType="String"/>
        <result property="name" column="name" javaType="String"/>
        <result property="departmentSn" column="department_sn" javaType="String"/>
        <result property="post" column="post" javaType="String"/>
		<!--association 下的column 表示的是 employee表与department表关联的外键的名称   -->
        <association property="department" column="department_sn" javaType="Department" >
            <!-- 下面配置department的属性 可以只配置需要的 不用全部都配置
			     association 里面的字段名 一定不能和 主表 employee的 字段名一样 要有所区别
			-->
			<id property="sn" column="dsn" javaType="String"/>
            <result property="name" column="dname" javaType="String"/>
			<!-- 	 <result property="address" column="address" javaType="String"/>-->
		
        </association>
    </resultMap>


    <insert id="insert" parameterType="Employee">
        insert into employee values(#{sn},#{password},#{name},#{departmentSn},#{post})
    </insert>

    <update id="update" parameterType="Employee">
        update employee set name=#{name},password=#{password},department_sn=#{departmentSn},post=#{post} where sn=#{sn}
    </update>

    <delete id="delete" parameterType="String">
        delete from employee where sn=#{sn}
    </delete>

    <select id="select" parameterType="String" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
         where e.sn=#{sn}
    </select>

    <select id="selectAll" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
    </select>
  
    <!-- 业务 通过职务和 部门  查找 待处理人 -->
     <select id="selectByDepartmentAndPost" resultMap="employee">
        select e.*,d.sn dsn,d.name dname from employee e left join department d on d.sn=e.department_sn
         <!--因为 职务 或者 部门的 信息 可能是 空的  在查找时 为了防止出错 所以 要使用 if 标签 来进行条件查询-->
		where e.sn is not NULL
        <if test="dsn!=null">
            and e.department_sn=#{dsn}
        </if>
        <if test="post!=null">
            and e.post=#{post}
        </if>
    </select>
</mapper>